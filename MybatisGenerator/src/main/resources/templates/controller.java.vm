package ${package.Controller};

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.web.bind.annotation.*;

import ${package.Entity}.${entity};
import ${cfg.serviceName};
import ${cfg.addUpdateDeleteOperationReturnPackage}.${cfg.addUpdateDeleteOperationReturnName};

import java.util.List;
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@Api(tags = "$!{table.comment} API")
public class ${table.controllerName} {
    private final static String ONE_RESOURCE = "/${table.name}";
    private final static String MANY_RESOURCE = "/${table.name}s";

    private final ${entity}Service service;

    private ${table.controllerName} (${entity}Service service) {
        this.service = service;
    }

    @ApiOperation(value = "查询单个")
    @GetMapping(ONE_RESOURCE + "/{id}")
    public ${cfg.addUpdateDeleteOperationReturnName} getById (@PathVariable Long id) {
        return service.getById(id);
    }

    @ApiOperation(value = "查询多个")
    @GetMapping(MANY_RESOURCE + "/{ids}")
    public ${cfg.addUpdateDeleteOperationReturnName} getByIds (@PathVariable List<Long> ids) {
        return service.getByIds(ids);
    }

    @ApiOperation(value = "新增")
    @PostMapping(ONE_RESOURCE)
    public ${cfg.addUpdateDeleteOperationReturnName} save (@RequestBody ${entity} param${entity}) {
        return service.save(param${entity});
    }

    @ApiOperation(value = "批量新增")
    @PostMapping(MANY_RESOURCE)
    public ${cfg.addUpdateDeleteOperationReturnName} saveBatch (@RequestBody List<${entity}> param${entity}s){
        return service.saveBatch(param${entity}s);
    }

    @ApiOperation(value = "更新")
    @PutMapping(ONE_RESOURCE)
    public ${cfg.addUpdateDeleteOperationReturnName} update (@RequestBody ${entity} param${entity}){
        return service.update(param${entity});
    }

    @ApiOperation(value = "批量更新")
    @PutMapping(MANY_RESOURCE)
    public ${cfg.addUpdateDeleteOperationReturnName} updateBatch (@RequestBody List<${entity}> param${entity}s){
        return service.updateBatch(param${entity}s);
    }

    @ApiOperation(value = "删除")
    @DeleteMapping(ONE_RESOURCE + "/{id}")
    public ${cfg.addUpdateDeleteOperationReturnName} delete (@PathVariable Long id){
        return service.delete(id);
    }

    @ApiOperation(value = "批量删除")
    @DeleteMapping(MANY_RESOURCE + "/{ids}")
    public ${cfg.addUpdateDeleteOperationReturnName} deleteBatch (@PathVariable List<Long> ids){
        return service.deleteBatch(ids);
    }
}